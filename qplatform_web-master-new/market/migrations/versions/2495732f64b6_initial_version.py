"""initial version

Revision ID: 2495732f64b6
Revises: 
Create Date: 2020-04-30 11:08:33.693314

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2495732f64b6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('coupon',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.SmallInteger(), nullable=False, comment='deduce_day: 1\\ndeduce_cash: 2\\ncash_discount: 3'),
    sa.Column('value', sa.Float(precision=53), nullable=False),
    sa.Column('total_cnt', sa.Integer(), nullable=False),
    sa.Column('limit_cnt', sa.Integer(), nullable=False),
    sa.Column('disable', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('start_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('msg', sa.Text(), server_default='', nullable=True),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expire_dt', sa.DateTime(), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_admin_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('phone', sa.String(length=14), nullable=False),
    sa.Column('email', sa.String(length=63), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('scope1', sa.String(length=32), nullable=False),
    sa.Column('scope2', sa.SmallInteger(), nullable=False, comment='su: 1'),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='normal: 1\\ninactive: 2\\ndisabled: 3\\ndeleted: 4'),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('push_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('qstrategy_id', sa.String(length=32), nullable=False),
    sa.Column('task_id', sa.String(length=32), nullable=False),
    sa.Column('contact', sa.String(length=14), server_default='', nullable=True),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='normal: 1\\ndisabled: 2\\nexpired: 3'),
    sa.Column('push_method', sa.SmallInteger(), nullable=False, comment='wechat: 1\\nemail: 2\\npost: 3'),
    sa.Column('push_id', sa.String(length=1024), nullable=False),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_push_info_task_id'), 'push_info', ['task_id'], unique=False)
    op.create_table('strategy_market',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('domain', sa.String(length=1024), nullable=False),
    sa.Column('info', sa.Text(), server_default='', nullable=True),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='normal: 1\\ndisabled: 2\\ndeleted: 3'),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('tag_type', sa.SmallInteger(), server_default=sa.text('1'), nullable=False, comment='tag: 1\\nstyle: 2'),
    sa.Column('deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user_collection',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('product_id', sa.String(length=32), nullable=False),
    sa.Column('product_type', sa.SmallInteger(), nullable=False, comment='qstrategy: 1\\npackage: 2\\nvip: 3'),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('canceled', sa.Boolean(), nullable=False),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_collection_product_id'), 'user_collection', ['product_id'], unique=False)
    op.create_table('market_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.Column('phone', sa.String(length=14), nullable=False),
    sa.Column('email', sa.String(length=63), nullable=True),
    sa.Column('broker_id', sa.String(length=32), server_default='', nullable=True),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='normal: 1\\ninactive: 2\\ndisabled: 3\\ndeleted: 4'),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['strategy_market.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('phone')
    )
    op.create_table('review_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=32), nullable=False),
    sa.Column('product_type', sa.SmallInteger(), nullable=False, comment='qstrategy: 1\\npackage: 2\\nvip: 3'),
    sa.Column('operation', sa.SmallInteger(), nullable=False, comment='online: 1\\noffline: 2'),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('contact', sa.String(length=14), nullable=False),
    sa.Column('review_dt', sa.DateTime(), nullable=True),
    sa.Column('review_status', sa.SmallInteger(), server_default='1', nullable=False, comment='wait: 1\\naccepted: 2\\nrejected: 3\\ndeleted: 4'),
    sa.Column('review_msg', sa.Text(), nullable=True),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['strategy_market.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_record_product_id'), 'review_record', ['product_id'], unique=False)
    op.create_table('strategy_package',
    sa.Column('product_id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('desc', sa.Text(), nullable=False),
    sa.Column('status', sa.SmallInteger(), server_default='2', nullable=False, comment='online_review: 1\\nonline_rejected: 2\\nonline: 3\\noffline_review: 4\\noffline_rejected: 5\\noffline: 6\\ndeleted: 7'),
    sa.Column('limit_copy', sa.Integer(), server_default=sa.text('10000'), nullable=False),
    sa.Column('limit_interval', sa.Integer(), server_default=sa.text('10000'), nullable=False),
    sa.Column('view_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('collect_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('share_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('buyout_price', sa.Float(precision=53), nullable=False),
    sa.Column('enable_discount', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('allow_coupon', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('period_prices', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('discount_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('online_dt', sa.DateTime(), nullable=True),
    sa.Column('offline_dt', sa.DateTime(), nullable=True),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['strategy_market.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('product_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('q_strategy',
    sa.Column('product_id', sa.String(length=32), nullable=False),
    sa.Column('sim_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('author_name', sa.String(length=32), server_default='', nullable=True),
    sa.Column('task_id', sa.String(length=32), nullable=False),
    sa.Column('sim_start_cash', sa.Float(precision=53), nullable=False),
    sa.Column('sim_start_dt', sa.DateTime(), nullable=False),
    sa.Column('sim_name', sa.String(length=128), nullable=False),
    sa.Column('bt_task_id', sa.String(length=32), nullable=True),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('buyout_price', sa.Float(precision=53), nullable=False),
    sa.Column('total_cnt', sa.Integer(), server_default=sa.text('1000'), nullable=False),
    sa.Column('category', sa.SmallInteger(), server_default=sa.text('1'), nullable=False, comment='stock: 1\\nfutures: 2'),
    sa.Column('style', sa.String(length=32), server_default='', nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ideas', sa.Text(), server_default='', nullable=True),
    sa.Column('desc', sa.Text(), server_default='', nullable=True),
    sa.Column('suit_money', sa.Float(precision=53), nullable=False),
    sa.Column('limit_copy', sa.Integer(), server_default=sa.text('10000'), nullable=False),
    sa.Column('limit_interval', sa.Integer(), server_default=sa.text('10000'), nullable=False),
    sa.Column('sell_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('sell_cnt_show', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('online_dt', sa.DateTime(), nullable=True),
    sa.Column('offline_dt', sa.DateTime(), nullable=True),
    sa.Column('view_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('collect_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('share_cnt', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('enable_discount', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('allow_coupon', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='online_review: 1\\nonline_rejected: 2\\nonline: 3\\noffline_review: 4\\noffline_rejected: 5\\noffline: 6\\ndeleted: 7'),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('period_prices', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('discount_info', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('market_id', sa.Integer(), nullable=True),
    sa.Column('package_id', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['market_id'], ['strategy_market.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['package_id'], ['strategy_package.product_id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_index(op.f('ix_q_strategy_sim_id'), 'q_strategy', ['sim_id'], unique=False)
    op.create_index(op.f('ix_q_strategy_task_id'), 'q_strategy', ['task_id'], unique=False)
    op.create_index(op.f('ix_q_strategy_user_id'), 'q_strategy', ['user_id'], unique=False)
    op.create_table('user_order',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.String(length=32), nullable=False),
    sa.Column('product_type', sa.SmallInteger(), nullable=False, comment='qstrategy: 1\\npackage: 2\\nvip: 3'),
    sa.Column('total_cash', sa.Float(precision=53), nullable=False),
    sa.Column('total_days', sa.Integer(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('gift_days', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('coupon_days', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('coupon_cash', sa.Float(precision=53), server_default=sa.text('0'), nullable=False),
    sa.Column('pay_cash', sa.Float(precision=53), nullable=False),
    sa.Column('payed_cash', sa.Float(precision=53), nullable=False),
    sa.Column('pay_dt', sa.DateTime(), nullable=True),
    sa.Column('expire_dt', sa.DateTime(), nullable=True),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False, comment='unpayed: 1\\npayed: 2\\ncalceled: 3\\nexpierd: 4\\ndeleted: 9'),
    sa.Column('create_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('update_dt', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('foreign_order_id', sa.String(length=32), nullable=False),
    sa.Column('pay_id', sa.String(length=48), nullable=False),
    sa.Column('pay_method', sa.SmallInteger(), nullable=False, comment='offline: 1\\nwechat: 2'),
    sa.Column('pay_url', sa.String(length=255), nullable=False),
    sa.Column('source', sa.String(length=32), server_default='pc', nullable=False),
    sa.Column('coupon', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('product_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['market_user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_order_product_id'), 'user_order', ['product_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_order_product_id'), table_name='user_order')
    op.drop_table('user_order')
    op.drop_index(op.f('ix_q_strategy_user_id'), table_name='q_strategy')
    op.drop_index(op.f('ix_q_strategy_task_id'), table_name='q_strategy')
    op.drop_index(op.f('ix_q_strategy_sim_id'), table_name='q_strategy')
    op.drop_table('q_strategy')
    op.drop_table('strategy_package')
    op.drop_index(op.f('ix_review_record_product_id'), table_name='review_record')
    op.drop_table('review_record')
    op.drop_table('market_user')
    op.drop_index(op.f('ix_user_collection_product_id'), table_name='user_collection')
    op.drop_table('user_collection')
    op.drop_table('tag')
    op.drop_table('strategy_market')
    op.drop_index(op.f('ix_push_info_task_id'), table_name='push_info')
    op.drop_table('push_info')
    op.drop_table('market_admin_user')
    op.drop_table('coupon')
    # ### end Alembic commands ###
